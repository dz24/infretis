name: pydocstyle on changes

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.py'
  push:
    branches:
      - main
    paths:
      - '**.py'
  workflow_dispatch:

jobs:
  pydocstyle:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          # Fetch full history for proper change detection
          fetch-depth: 0

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: "Install pydocstyle"
        run: pip install pydocstyle

      - name: "Get changed files"
        id: changed-files
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For PRs, compare with the base branch
            BASE_SHA=$(git merge-base ${{ github.event.pull_request.base.sha }} HEAD)
            CHANGED_FILES=$(git diff --name-only $BASE_SHA HEAD -- '*.py' | xargs)
          else
            # For pushes to main, use the previous commit
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- '*.py' | xargs)
          fi
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: "Run pydocstyle on changed files"
        env:
          ALL_CHANGED_FILES: ${{ env.CHANGED_FILES }}
        run: |
          IFS=' ' read -r -a files_array <<< "$ALL_CHANGED_FILES"
          for file in "${files_array[@]}"; do
              if [[ "$file" == *.py ]]; then
                echo "Running pydocstyle on $file"
                pydocstyle "$file"
                # The following will turn the errors into warnings
                # (can be used if the failing is too strict).
                #pydocstyle_output=$(pydocstyle "$file" 2>&1) || true
                #if [ -n "$pydocstyle_output" ]; then
                #    echo "::warning file=$file::$pydocstyle_output"
                #fi
              else
                echo "$file is not a Python file, skipping"
              fi
          done
